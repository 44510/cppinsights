template<typename T> class my_array {};
/* First instantiated from: TemplateAsTemplateArgumentTest.cpp:7 */
#ifdef INSIGHTS_USE_TEMPLATE
class my_array<int>
{
  
};

#endif

 
// two type template parameters and one template template parameter:
template<typename K, typename V, template<typename> typename C = my_array>
class Map
{
    C<K> key;
    C<V> value;
};
/* First instantiated from: TemplateAsTemplateArgumentTest.cpp:13 */
#ifdef INSIGHTS_USE_TEMPLATE
class Map<int, int, my_array>
{
  
};

#endif


int main()
{
    Map<int, int> x;
}
