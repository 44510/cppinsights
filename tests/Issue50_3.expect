template<class F>
void foo(F&& f)
{
}

/* First instantiated from: Issue50_3.cpp:16 */
#ifdef INSIGHTS_USE_TEMPLATE
template<>
void foo<int &&(&)(int &&)>(int &&(&&)(int &&) f)
{
}
#endif


using F = int && (int&&);

int && f(int && i)
{
  return static_cast<int &&>(i);
}


int main()
{
  F & rf = f;
  foo(rf);
  return 0;
}

