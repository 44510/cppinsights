int main()
{
#if 0
  [](){}();

  [](){ return 1;}();
#endif

   class __lambda_8_26
   {
     public: using retType = int (*)(int, char);
     inline /*constexpr */ operator retType () const
     {
       return __invoke;
     }
     public: inline /*constexpr */ int operator()(int a, char b) const
     {
       return a + static_cast<int>(b);
     }
     private: inline static int __invoke(int a, char b)
     {
       return a + static_cast<int>(b);
     }
     
   };
   
     int (*fp)(int, char) = __lambda_8_26{};

//  int (*fd)(int) = [](auto a){ return a;};

}

