template <class T>
void foo(T && t)
{ }

/* First instantiated from: Issue50.cpp:10 */
#ifdef INSIGHTS_USE_TEMPLATE
template<>
void foo<Test &>(Test & t)
{
}
#endif


struct Test {/* public: inline constexpr Test() noexcept; */
/* public: inline constexpr Test(const Test &); */
/* public: inline constexpr Test(Test &&); */
};

int main()
{
  Test test = Test();
  foo(test);
  return 0;
}

